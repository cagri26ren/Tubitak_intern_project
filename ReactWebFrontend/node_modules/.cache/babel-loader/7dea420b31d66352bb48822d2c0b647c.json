{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\Survey\\\\SurveyElement.js\";\nimport 'date-fns';\nimport React, { Component, Fragment } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios';\nimport SurveyHeader from './SurveyHeader';\nimport SurveyComponent from './SurveyComponent';\nimport SurveyElementComponent from './SurveyElementComponent';\nimport { isThisSecond } from 'date-fns';\nconst uri = \"http://localhost:8080/surveyQuestions/\";\n\nfunction getParticipant(arr) {\n  console.log(arr);\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].tcKimlikNo === localStorage.getItem('tc')) {\n      return arr[i];\n    }\n  }\n}\n\nfunction getPostData(event) {\n  let postData = [];\n\n  for (let i = 0; i < getParticipant(event.participants).surveyQuestions.length; i++) {\n    const data = {\n      'questionName': getParticipant(event.participants).surveyQuestions[i].questionName,\n      'answer': this.state.answer[i],\n      'tcKimlikNo': localStorage.getItem('tc')\n    };\n    postData.push(data);\n  }\n\n  return postData;\n}\n\nlet number = 0;\n\nfunction createEventComponents(event) {\n  number = number + 1;\n  console.log(event);\n  return /*#__PURE__*/React.createElement(SurveyElementComponent, {\n    question: event.questionName,\n    number: number,\n    handleChange: (text, i) => {\n      handleTextArea(text, i);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction handleTextArea(text, i) {\n  let arr = [...this.state.answers];\n  arr[i] = text;\n  this.setState({\n    answers: arr\n  });\n}\n\nclass SurveyElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      event: {},\n      answers: [],\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    axios.post(uri + window.location.href.substring(window.location.href.indexOf(\"/surveyQuestions\") + 16), {\n      'tcKimlikNo': localStorage.getItem('tc')\n    }).then(response => {\n      this.setState({\n        event: response.data,\n        loaded: true\n      });\n      console.log(response);\n    });\n  }\n\n  handleSubmit(event) {\n    axios.put(uri + window.location.href.substring(window.location.href.indexOf(\"/surveyQuestions\")) + 16, getPostData(this.state.event)).then(response => {\n      if (response.data.message === 'ERROR') {\n        console.log(response);\n      } else {\n        history.push(\"/events\");\n      }\n    });\n  }\n\n  render() {\n    console.log(\"asdas\");\n    number = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '40%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 50\n      }\n    }, this.state.event.name, \" Survey \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '80%',\n        border: '3px solid black',\n        borderRadius: '25px',\n        margin: '10px auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, this.state.loaded ? getParticipant(this.state.event.participants).surveyQuestions.map(surveyQuestion => createEventComponents(surveyQuestion)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 171\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginRight: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: event => {\n        this.handleSubmit(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SurveyElement;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/Survey/SurveyElement.js"],"names":["React","Component","Fragment","TextField","history","DateSection","Button","Pagination","MapContainer","TextareaAutosize","axios","SurveyHeader","SurveyComponent","SurveyElementComponent","isThisSecond","uri","getParticipant","arr","console","log","i","length","tcKimlikNo","localStorage","getItem","getPostData","event","postData","participants","surveyQuestions","data","questionName","state","answer","push","number","createEventComponents","text","handleTextArea","answers","setState","SurveyElement","constructor","props","loaded","componentDidMount","post","window","location","href","substring","indexOf","then","response","handleSubmit","put","message","render","marginLeft","name","backgroundColor","height","width","border","borderRadius","margin","display","flexDirection","justifyContent","map","surveyQuestion","float","marginRight"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, {Component,Fragment} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport history from '../../history';\r\nimport DateSection from '../DateSection';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport MapContainer from '../../MapContainer';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport axios from 'axios';\r\nimport SurveyHeader from './SurveyHeader'\r\nimport SurveyComponent from './SurveyComponent'\r\nimport SurveyElementComponent from './SurveyElementComponent'\r\nimport { isThisSecond } from 'date-fns';\r\n\r\nconst uri = \"http://localhost:8080/surveyQuestions/\";\r\n\r\nfunction getParticipant(arr){\r\n    console.log(arr);\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        if( arr[i].tcKimlikNo === localStorage.getItem('tc')){\r\n            return arr[i];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getPostData( event ){\r\n    let postData = [];\r\n    for( let i = 0; i < getParticipant(event.participants).surveyQuestions.length; i++ ){\r\n        const data ={\r\n            'questionName': getParticipant(event.participants).surveyQuestions[i].questionName,\r\n            'answer': this.state.answer[i],\r\n            'tcKimlikNo':localStorage.getItem('tc')\r\n        }\r\n        postData.push(data);\r\n    }\r\n    return postData;\r\n}\r\n\r\nlet number = 0;\r\nfunction createEventComponents(event){\r\n    number = number + 1;\r\n    console.log(event);\r\n    return(\r\n        <SurveyElementComponent\r\n            question={event.questionName} \r\n            number={number}\r\n            handleChange={(text,i)=>{handleTextArea(text,i)}}\r\n        > \r\n        </SurveyElementComponent>\r\n    )    \r\n}\r\n\r\nfunction handleTextArea(text,i){\r\n    let arr = [...this.state.answers];\r\n    arr[i] = text;\r\n\r\n    this.setState({answers:arr});\r\n}\r\n\r\n\r\n\r\nclass SurveyElement extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            event:{},\r\n            answers:[],\r\n            loaded:false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.post(uri+window.location.href.substring(window.location.href.indexOf(\"/surveyQuestions\") + 16 ),{'tcKimlikNo':localStorage.getItem('tc')}).then(response => {\r\n            this.setState({event:response.data,loaded:true})\r\n            console.log(response)\r\n        });\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        axios.put(uri+window.location.href.substring(window.location.href.indexOf(\"/surveyQuestions\")) + 16, getPostData(this.state.event) ).then(response=>{\r\n            if(response.data.message==='ERROR'){\r\n                console.log(response);\r\n            }\r\n            else{\r\n                history.push(\"/events\")\r\n            }\r\n        })\r\n    }      \r\n\r\n\r\n    render(){\r\n        console.log(\"asdas\")\r\n        number = 0;\r\n        return(\r\n            <div width=\"100%\">\r\n                <div style={{marginLeft:'40%'}}> <h1>{this.state.event.name} Survey </h1> </div>\r\n                <div style={{backgroundColor: 'black',height:'1px'}}></div>\r\n                <div style={{width:'80%',border:'3px solid black',borderRadius:'25px',margin:'10px auto'}}>\r\n                    <div style={{display:'flex',flexDirection:'column',justifyContent:'space-evenly'}}>\r\n                        {(this.state.loaded)?getParticipant(this.state.event.participants).surveyQuestions.map( surveyQuestion => createEventComponents(surveyQuestion) ):<div></div>}\r\n                    </div>\r\n                    <div style={{float:'right',marginRight:'1%'}}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={(event) => {this.handleSubmit(event)}}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SurveyElement;"]},"metadata":{},"sourceType":"module"}