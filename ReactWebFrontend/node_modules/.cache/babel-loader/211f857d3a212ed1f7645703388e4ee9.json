{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Documents\\\\GitHub\\\\Tubitak_intern_project\\\\WebApplication\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\AskQuestion\\\\Ask.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport MessageComponent from './MessageComponent';\nimport AskQuestionHeader from './AskQuestionHeader';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst uri = \"http://localhost:8080/events/ask/\"; //DO NOT FORGET TO EMPTY THE LOCAL STORAGE COMPWILLUNMOUNT\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }));\n}\n\nclass Ask extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chats: [],\n      postQuestion: \"\",\n      openDialog: false,\n      open: false,\n      alertType: 'error',\n      theMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.post(uri + window.location.href.substring(window.location.href.indexOf('/ask') + 5), {\n      'tcKimlikNo': localStorage.getItem('tc') || ''\n    }).then(response => {\n      let arr;\n      arr = [...response.data];\n      this.setState({\n        chats: arr\n      });\n    });\n  }\n\n  handleSubmit() {\n    const postData = {\n      'tcKimlikNo': localStorage.getItem('tc') || '',\n      'question': this.state.postQuestion,\n      'answer': ''\n    };\n\n    if (this.state.postQuestion === \"\") {\n      this.setState({\n        open: true,\n        alertType: 'error',\n        theMsg: 'Question cannot be empty'\n      });\n    } else {\n      axios.post(uri + \"post/\" + window.location.href.substring(window.location.href.indexOf('/ask') + 5), postData).then(response => {\n        if (response.data.messageType === 'ERROR') {\n          this.setState({\n            open: true,\n            alertType: 'error',\n            theMsg: response.data.message\n          });\n        } else {\n          this.setState({\n            openDialog: false\n          });\n          this.setState({\n            open: true,\n            alertType: 'success',\n            theMsg: response.data.message\n          });\n        }\n      });\n    }\n  }\n\n  createChatComponents(chat) {\n    console.log(chat);\n    let comp;\n    comp = chat.answer !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(MessageComponent, {\n      type: \"answer\",\n      answer: chat.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 122\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MessageComponent, {\n      type: \"question\",\n      question: chat.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })), comp, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        height: '1px',\n        marginTop: '1%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    console.log(\"adasdf\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 400 + this.state.chats.length * 230 + 'px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AskQuestionHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, this.state.chats.map(chat => this.createChatComponents(chat))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50%',\n        marginTop: '10px',\n        marginBottom: '10px',\n        marginLeft: '43%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          openDialog: true\n        });\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Post Question\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.openDialog,\n      onClose: () => {\n        this.setState({\n          openDialog: false\n        });\n      },\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Enter Question\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"Enter the question you want to ask\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"empty textarea\",\n      placeholder: \"Empty\",\n      value: this.state.postQuestion,\n      onChange: text => {\n        this.setState({\n          postQuestion: text.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          openDialog: false\n        });\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleSubmit(),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.open,\n      autoHideDuration: 3000,\n      onClose: () => this.setState({\n        open: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.setState({\n        open: false\n      }),\n      severity: this.state.alertType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, this.state.theMsg)));\n  }\n\n}\n\nexport default Ask;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Documents/GitHub/Tubitak_intern_project/WebApplication/src/main/webapp/src/components/AskQuestion/Ask.js"],"names":["React","Component","axios","TextareaAutosize","MessageComponent","AskQuestionHeader","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Button","Snackbar","MuiAlert","uri","Alert","props","Ask","state","chats","postQuestion","openDialog","open","alertType","theMsg","componentDidMount","post","window","location","href","substring","indexOf","localStorage","getItem","then","response","arr","data","setState","handleSubmit","postData","messageType","message","createChatComponents","chat","console","log","comp","answer","backgroundColor","height","question","marginTop","render","length","width","map","marginBottom","marginLeft","text","target","value"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from 'axios';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport MessageComponent from './MessageComponent';\nimport AskQuestionHeader from './AskQuestionHeader';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst uri = \"http://localhost:8080/events/ask/\"\n\n//DO NOT FORGET TO EMPTY THE LOCAL STORAGE COMPWILLUNMOUNT\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass Ask extends Component{\n\n    state={\n        chats:[],\n        postQuestion:\"\",\n        openDialog:false,\n        open:false,\n        alertType:'error',\n        theMsg:''\n    }\n    componentDidMount(){\n        axios.post(uri+window.location.href.substring(window.location.href.indexOf('/ask')+5),{'tcKimlikNo':localStorage.getItem('tc')||''}).then(response=>{\n            let arr;\n            arr = [...response.data];\n            this.setState({\n                chats:arr\n            })\n        })\n    }\n    handleSubmit(){\n        const postData ={\n            'tcKimlikNo':localStorage.getItem('tc') || '',\n            'question':this.state.postQuestion,\n            'answer':''\n        }\n        if( this.state.postQuestion ===\"\"){\n            this.setState({open:true,alertType:'error',theMsg:'Question cannot be empty'});\n        }\n        else{\n            axios.post(uri + \"post/\"+window.location.href.substring(window.location.href.indexOf('/ask')+5),postData).then(response=>{\n                if(response.data.messageType === 'ERROR'){\n                    this.setState({open:true,alertType:'error',theMsg:response.data.message});\n                }\n                else{\n                    this.setState({openDialog:false})\n                    this.setState({open:true,alertType:'success',theMsg:response.data.message});\n                }\n            })\n        }\n    }\n\n    createChatComponents(chat){\n        console.log(chat)\n        let comp;\n        comp = (chat.answer!=='')?(<div><MessageComponent type=\"answer\" answer={chat.answer}></MessageComponent></div>):(<div></div>)\n        return(\n            <div>\n                <div style={{backgroundColor: 'black',height:'1px'}}></div>\n                <div>\n                    <MessageComponent type=\"question\" question={chat.question}></MessageComponent>\n                </div>\n                {comp}\n                <div style={{backgroundColor: 'black',height:'1px',marginTop:'1%'}}></div>\n             </div>\n        )\n    }\n    render(){\n        console.log(\"adasdf\");\n        return(\n            <div style={{height:( 400 + (this.state.chats.length * 230 ) + 'px'), width:'100%'}}>\n                <AskQuestionHeader></AskQuestionHeader>\n                <div>\n                    {this.state.chats.map( chat => this.createChatComponents(chat) )}\n                </div>\n                <div>\n                    <div style={{width:'50%',marginTop:'10px',marginBottom:'10px',marginLeft:'43%'}}>\n                        <Button onClick={()=>{this.setState({openDialog:true})}} variant=\"contained\" color=\"primary\">\n                                Post Question\n                        </Button>\n                    </div>\n                </div>\n                <div>\n                    <Dialog open={this.state.openDialog} onClose={()=>{this.setState({openDialog:false})}} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Enter Question</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Enter the question you want to ask\n                            </DialogContentText>\n                            <TextareaAutosize aria-label=\"empty textarea\" placeholder=\"Empty\" value={this.state.postQuestion} \n                                        onChange={(text)=>{this.setState({postQuestion:text.target.value})}}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={()=>{this.setState({openDialog:false})}} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={()=>this.handleSubmit()} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n                <Snackbar open={this.state.open} autoHideDuration={3000} onClose={()=>this.setState({open:false})}>\n                    <Alert onClose={()=>this.setState({open:false})} severity={this.state.alertType}>\n                        {this.state.theMsg}\n                    </Alert>\n                </Snackbar>\n\n            </div>\n        )\n    }\n}\n\nexport default Ask;"]},"metadata":{},"sourceType":"module"}