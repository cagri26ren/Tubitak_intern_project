{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\AddEvent\\\\DateSection.js\";\nimport 'date-fns';\nimport React, { useEffect } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst DateSection = props => {\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [prevProps, setPrevProps] = React.useState(props);\n  useEffect(() => {\n    console.log(props);\n\n    if (prevProps !== props) {\n      setOpen(true);\n    }\n\n    setPrevProps(props);\n  }); //Code for alert starts here\n\n  const [open, setOpen] = React.useState(false);\n  const [msg, setMsg] = React.useState('');\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    }\n  }));\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }; //Ends here\n\n\n  const handleStartDateChange = date => {\n    if (selectedEndDate.getTime() >= date.getTime()) {\n      setSelectedStartDate(date);\n      dateChoosed(date);\n    } else {\n      setMsg('Start date must be behind end date');\n      setOpen(true);\n    }\n  };\n\n  const handleEndDateChange = date => {\n    if (date.getTime() >= selectedStartDate.getTime()) {\n      setSelectedEndDate(date);\n      dateChoosed(date);\n    } else {\n      setMsg('Start date must be behind end date');\n      setOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      width: '75%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"startDate\",\n    label: \"Start Date\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"endDate\",\n    label: \"End Date\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      width: '75%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    margin: \"normal\",\n    id: \"time-picker\",\n    label: \"Start Time\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    margin: \"normal\",\n    id: \"time-picker\",\n    label: \"End Time\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change time'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, msg))));\n};\n\nexport default DateSection;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/AddEvent/DateSection.js"],"names":["React","useEffect","DateFnsUtils","Snackbar","MuiAlert","makeStyles","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Alert","props","DateSection","selectedStartDate","setSelectedStartDate","useState","Date","selectedEndDate","setSelectedEndDate","prevProps","setPrevProps","console","log","setOpen","open","msg","setMsg","useStyles","theme","root","width","marginTop","spacing","classes","handleClose","event","reason","handleStartDateChange","date","getTime","dateChoosed","handleEndDateChange","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React,{useEffect} from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst DateSection = (props) => {\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n    const [prevProps, setPrevProps] = React.useState(props);\r\n\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if( prevProps !== props ){\r\n        setOpen(true);\r\n      }\r\n      setPrevProps(props);\r\n    });\r\n    //Code for alert starts here\r\n    const [open, setOpen] = React.useState(false);\r\n    const [msg, setMsg] = React.useState('');\r\n    const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        width: \"100%\",\r\n        \"& > * + *\": {\r\n          marginTop: theme.spacing(2)\r\n        }\r\n      }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n    //Ends here\r\n    \r\n\r\n  const handleStartDateChange = (date) => {\r\n    if( selectedEndDate.getTime() >= date.getTime()){\r\n      setSelectedStartDate(date);\r\n      dateChoosed(date);\r\n    }\r\n    else{\r\n      setMsg('Start date must be behind end date');\r\n      setOpen(true);\r\n    }\r\n  };\r\n  const handleEndDateChange = (date) => {\r\n    if( date.getTime() >= selectedStartDate.getTime() ){\r\n      setSelectedEndDate(date);\r\n      dateChoosed(date);\r\n    }\r\n    else{\r\n      setMsg('Start date must be behind end date');\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style = {{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-evenly\",width: '75%'}}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"startDate\"\r\n            label=\"Start Date\"\r\n            value={selectedStartDate}\r\n            onChange={handleStartDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"endDate\"\r\n            label=\"End Date\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n      </MuiPickersUtilsProvider>\r\n      </div>\r\n      <div style = {{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-evenly\",width: '75%'}}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Start Time\"\r\n              value={selectedStartDate}\r\n              onChange={handleStartDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change time',\r\n              }}\r\n            />\r\n          <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"End Time\"\r\n              value={selectedEndDate}\r\n              onChange={handleEndDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change time',\r\n              }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n\r\n      <div className={classes.root}>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"warning\">\r\n            {msg}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateSection;"]},"metadata":{},"sourceType":"module"}