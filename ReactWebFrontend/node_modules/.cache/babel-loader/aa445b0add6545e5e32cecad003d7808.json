{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { UserContext } from \"../UserContext\";\nimport Button from '@material-ui/core/Button';\nimport Alert from './Alert';\n\nfunction Login() {\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  let alert;\n  useEffect(() => {\n    console.log(user);\n  });\n\n  const loin = async (a, b) => {\n    return {\n      \"username\": a,\n      \"password\": b\n    };\n  };\n\n  const handleChange = event => {\n    if (event.target.name == \"username\") {\n      setUsername(event.target.value);\n    } else {\n      setPassword(event.target.value);\n    }\n  };\n\n  const handleLogin = async () => {\n    if (username == \"\") {\n      alert = /*#__PURE__*/React.createElement(Alert, {\n        alertType: \"error\",\n        msg: \"Username cannot be empty\",\n        open: open,\n        alertClose: () => setOpen(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      });\n    } else if (password == \"\") {\n      alert = /*#__PURE__*/React.createElement(Alert, {\n        alertType: \"error\",\n        msg: \"Password cannot be empty\",\n        open: open,\n        alertClose: () => setOpen(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      });\n    } else {\n      const u = await loin(username, password);\n      setUser(u);\n      console.log(u);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"550px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"20%\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginTop: \"10%\",\n      marginLeft: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    id: \"standard-full-width\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Username\",\n    value: username,\n    size: \"medium\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    id: \"standard-full-width2\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Password\",\n    size: \"medium\",\n    value: password,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Primary\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, alert));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/Login.js"],"names":["React","useState","useContext","useEffect","TextField","UserContext","Button","Alert","Login","username","setUsername","password","setPassword","open","setOpen","user","setUser","alert","console","log","loin","a","b","handleChange","event","target","name","value","handleLogin","u","height","width","justifyContent","display","flexDirection","marginTop","marginLeft","margin","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useContext,useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {UserContext} from \"../UserContext\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from './Alert';\r\n\r\nfunction Login(){\r\n    const [username,setUsername] = React.useState(\"\");\r\n    const [password,setPassword] = React.useState(\"\");\r\n    const [open,setOpen] = React.useState(false);\r\n    const {user,setUser} = useContext(UserContext);\r\n    let alert;\r\n\r\n    useEffect(()=> {console.log(user)})\r\n\r\n    const loin = async (a,b) => {\r\n        return{\r\n            \"username\": a,\r\n            \"password\": b\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if(event.target.name == \"username\"){\r\n            setUsername(event.target.value);\r\n        }\r\n        else{\r\n            setPassword(event.target.value);\r\n        }\r\n    }\r\n\r\n        const handleLogin = async () =>{\r\n        if(username == \"\"){\r\n            alert = <Alert alertType=\"error\" msg=\"Username cannot be empty\" open={open} alertClose={()=>setOpen(false)}></Alert>\r\n        }\r\n        else if(password == \"\" ){\r\n            alert = <Alert alertType=\"error\" msg=\"Password cannot be empty\" open={open} alertClose={()=>setOpen(false)}></Alert>\r\n        }\r\n        else{\r\n           const u = await loin(username,password);\r\n           setUser(u);\r\n           console.log(u);\r\n        }\r\n\r\n    }\r\n    return(\r\n        <div style={{height:\"550px\"}}>\r\n            <div style={{width:\"20%\",justifyContent:\"center\", display:\"flex\",flexDirection:\"column\",marginTop:\"10%\",marginLeft:\"500px\"}}>\r\n                <h1>Login</h1>\r\n                <TextField\r\n                    name = \"username\"\r\n                    id=\"standard-full-width\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(event)=>handleChange(event)}\r\n                />\r\n                <TextField\r\n                    name=\"password\"\r\n                    id=\"standard-full-width2\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Password\"\r\n                    size=\"medium\"\r\n                    value={password}\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(event)=>handleChange(event)}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n                    Primary\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {alert}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}