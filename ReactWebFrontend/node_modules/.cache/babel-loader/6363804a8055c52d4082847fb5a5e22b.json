{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\AddEvent\\\\AddEvent.js\";\nimport 'date-fns';\nimport React, { Component } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport AddEventHeader from './AddEventHeader';\nimport SwitchSection from '../SwitchSection';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport Alert from '../Alert';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { Data } from '@react-google-maps/api';\n/**\r\n * Errors: \r\n * 1-You need to click 2 times to set the location\r\n * 2-End date not gettin correctly (getting realy close to fix)\r\n */\n\nconst uri = \"http://localhost:8080/events\";\n\nfunction getMonthNumberFromName(monthName) {\n  switch (monthName) {\n    case 'Jan':\n      return '01';\n\n    case 'Feb':\n      return '02';\n\n    case 'Mar':\n      return '03';\n\n    case 'Apr':\n      return '04';\n\n    case 'May':\n      return '05';\n\n    case 'Jun':\n      return '06';\n\n    case 'Jul':\n      return '07';\n\n    case 'Aug':\n      return '08';\n\n    case 'Sep':\n      return '09';\n\n    case 'Oct':\n      return '10';\n\n    case 'Nov':\n      return '11';\n\n    case 'Dec':\n      return '12';\n\n    default:\n      return \"error\";\n  }\n}\n\nfunction fixDateForJSON(date) {\n  let year = date.substring(11, 15);\n  let month = getMonthNumberFromName(date.substring(4, 7));\n  let day = date.substring(8, 10);\n  return year + '-' + month + '-' + day;\n}\n\nfunction fixTimeForJSON(date) {\n  let hour = date.substring(16, 18);\n  let minute = date.substring(19, 21);\n  return hour + ':' + minute;\n}\n\nclass AddEvent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventName: \"\",\n      eventCapacity: 0,\n      open: false,\n      msg: \"\",\n      alertType: \"\",\n      locationLat: null,\n      locationLng: null,\n      locationText: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      switchGender: false,\n      switchAge: false\n    };\n  }\n\n  handleCreate(event) {\n    if (this.state.eventName === \"\") {\n      this.setState({\n        alertType: \"error\",\n        msg: \"Event name can not be empty\",\n        open: !this.state.open\n      });\n    } else if (this.state.eventCapacity === 0) {\n      this.setState({\n        alertType: \"error\",\n        msg: \"Event capacity can not be empty\",\n        open: !this.state.open\n      });\n    } else if (this.state.locationLat == null || this.state.locationLng == null) {\n      this.setState({\n        alertType: \"error\",\n        msg: \"You must select a location for the event\",\n        open: !this.state.open\n      });\n    } else {\n      const postData = {\n        'name': this.state.eventName,\n        'max': this.state.eventCapacity,\n        'startDate': fixDateForJSON(this.state.startDate),\n        'startTime': fixTimeForJSON(this.state.startDate),\n        'endDate': fixDateForJSON(this.state.endDate),\n        'endTime': fixTimeForJSON(this.state.endDate),\n        'lat': this.state.locationLat,\n        'lng': this.state.locationLng\n      };\n      axios.post(uri, postData).then(response => {\n        console.log(response);\n        let type;\n\n        if (response.data.messageType === 'ERROR') {\n          type = \"error\";\n        } else {\n          type = \"success\";\n        }\n\n        if (type !== \"success\") {\n          this.setState({\n            open: true,\n            msg: response.data.message,\n            alertType: 'error'\n          });\n        } else {\n          this.props.callbackAlert(response.data.message, type);\n        }\n\n        if (response.data.messageType === 'SUCCESS') {\n          history.push(\"/events\");\n        }\n      }); //Alert the user and pass the data to backend\n      //this.setState({ alertType: \"succes\", msg:\"Event Created\",open:!this.state.open});\n\n      console.log(postData);\n      console.log(this.state.endDate);\n      console.log(this.state.startDate);\n    }\n  }\n\n  handleInput(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddEventHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, \"Event Name(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100px',\n        marginTop: '1em',\n        marginLeft: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"eventName\",\n      id: \"standard-basic\",\n      value: this.state.eventName,\n      label: \"Event Name\",\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, \"Event Capacity(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100px',\n        marginTop: '1em',\n        marginLeft: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"eventCapacity\",\n      id: \"standard-basic\",\n      value: this.state.eventCapacity,\n      label: \"Event Capacity\",\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, \"Event Destination(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '10px',\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MapContainer, {\n      curLat: 10,\n      curLng: 10,\n      locationChoosed: location => this.setState({\n        locationLat: location.lat,\n        locationLng: location.lng\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, \"Enter Adress Here:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"empty textarea\",\n      placeholder: \"Empty\",\n      value: this.state.locationText,\n      onChange: text => {\n        this.setState({\n          locationText: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"Time(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(DateSection, {\n      curStartDate: new Date(),\n      curEndDate: new Date(),\n      data: \"a\",\n      dateChoosed: date => {\n        this.setState({\n          startDate: date.substring(0, date.indexOf(\"G\")),\n          endDate: date.substring(53)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, \"Optinal Choices\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, \"This part is for optional questions for the outside user, choose the ones you want to ask\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SwitchSection, {\n      switchsChoosed: choice => this.setState({\n        switchAge: choice.switchAge,\n        switchGender: choice.switchGender\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginRight: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: event => this.handleCreate(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"Create Event\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alertType: this.state.alertType,\n      msg: this.state.msg,\n      open: this.state.open,\n      alertClose: () => this.setState({\n        open: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default AddEvent;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/AddEvent/AddEvent.js"],"names":["React","Component","TextField","AddEventHeader","SwitchSection","history","DateSection","Alert","axios","Button","MapContainer","TextareaAutosize","Data","uri","getMonthNumberFromName","monthName","fixDateForJSON","date","year","substring","month","day","fixTimeForJSON","hour","minute","AddEvent","constructor","props","state","eventName","eventCapacity","open","msg","alertType","locationLat","locationLng","locationText","startDate","endDate","switchGender","switchAge","handleCreate","event","setState","postData","post","then","response","console","log","type","data","messageType","message","callbackAlert","push","handleInput","name","target","value","render","height","backgroundColor","width","marginTop","marginLeft","display","justifyContent","alignItems","marginBottom","location","lat","lng","text","Date","indexOf","choice","float","marginRight"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, {Component} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddEventHeader from './AddEventHeader';\r\nimport SwitchSection from '../SwitchSection';\r\nimport history from '../../history';\r\nimport DateSection from '../DateSection';\r\nimport Alert from '../Alert'\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport MapContainer from '../../MapContainer';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { Data } from '@react-google-maps/api';\r\n\r\n/**\r\n * Errors: \r\n * 1-You need to click 2 times to set the location\r\n * 2-End date not gettin correctly (getting realy close to fix)\r\n */\r\n\r\nconst uri = \"http://localhost:8080/events\"\r\n\r\nfunction getMonthNumberFromName(monthName){\r\n    switch(monthName){\r\n        case 'Jan':\r\n            return '01';\r\n        case 'Feb':\r\n            return '02';\r\n        case 'Mar':\r\n            return '03';\r\n        case 'Apr':\r\n            return '04';\r\n        case 'May':\r\n            return '05';\r\n        case 'Jun':\r\n            return '06';\r\n        case 'Jul':\r\n            return '07';\r\n        case 'Aug':\r\n            return '08';\r\n        case 'Sep':\r\n            return '09';\r\n        case 'Oct':\r\n            return '10';\r\n        case 'Nov':\r\n            return '11';\r\n        case 'Dec':\r\n            return '12';\r\n        default:\r\n            return \"error\";\r\n    }\r\n}\r\n\r\nfunction fixDateForJSON(date){\r\n    let year = date.substring(11,15);\r\n    let month = getMonthNumberFromName(date.substring(4,7));\r\n    let day = date.substring(8,10);\r\n    \r\n    return year+'-'+month+'-'+day;\r\n}\r\nfunction fixTimeForJSON(date){\r\n    let hour = date.substring(16,18);\r\n    let minute = date.substring(19,21);\r\n    return hour+':'+minute;\r\n}\r\nclass AddEvent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            eventName: \"\",\r\n            eventCapacity: 0,\r\n\r\n            open: false,\r\n            msg: \"\",\r\n            alertType: \"\",\r\n\r\n            locationLat: null,\r\n            locationLng: null,\r\n            locationText: \"\",\r\n\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n\r\n            switchGender: false,\r\n            switchAge: false\r\n        }\r\n    }\r\n      \r\n    handleCreate(event){\r\n        if((this.state.eventName === \"\")){\r\n            this.setState({ alertType: \"error\", msg:\"Event name can not be empty\",open:!this.state.open});\r\n        }\r\n        else if( (this.state.eventCapacity === 0)){\r\n            this.setState({ alertType: \"error\", msg:\"Event capacity can not be empty\",open:!this.state.open});\r\n        }\r\n        else if( this.state.locationLat == null || this.state.locationLng == null ){\r\n            this.setState({ alertType: \"error\", msg:\"You must select a location for the event\",open:!this.state.open});\r\n        }\r\n    \r\n        else{\r\n            const postData ={\r\n                'name':this.state.eventName,\r\n                'max':this.state.eventCapacity,\r\n                'startDate':fixDateForJSON(this.state.startDate),\r\n                'startTime':fixTimeForJSON(this.state.startDate),\r\n                'endDate':fixDateForJSON(this.state.endDate),\r\n                'endTime':fixTimeForJSON(this.state.endDate),\r\n                'lat':this.state.locationLat,\r\n                'lng':this.state.locationLng\r\n            };\r\n            axios.post( uri, postData ).then( response => {\r\n                console.log(response);\r\n                let type;\r\n                if( response.data.messageType === 'ERROR' ){\r\n                    type = \"error\";\r\n                }\r\n                else{\r\n                    type = \"success\";\r\n                }\r\n                if( type !== \"success\"  ){\r\n                    this.setState({\r\n                        open:true,\r\n                        msg:response.data.message,\r\n                        alertType:'error'\r\n                    })\r\n                }\r\n                else{\r\n                    this.props.callbackAlert(response.data.message,type);\r\n                }\r\n                if(response.data.messageType === 'SUCCESS'){\r\n                    history.push(\"/events\");\r\n                }\r\n            });\r\n            //Alert the user and pass the data to backend\r\n            //this.setState({ alertType: \"succes\", msg:\"Event Created\",open:!this.state.open});\r\n            console.log(postData);\r\n            console.log(this.state.endDate);\r\n            console.log(this.state.startDate);\r\n       }\r\n    }\r\n    handleInput(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <AddEventHeader></AddEventHeader>\r\n                <div className = \"mainContainer\">\r\n                    <form>\r\n                        <div>\r\n                            <h2>Event Name(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{height:'100px', marginTop:'1em',marginLeft:'1em'}}>\r\n                                <TextField name= \"eventName\" id=\"standard-basic\" value={this.state.eventName} label=\"Event Name\" onChange={(event)=>this.handleInput(event)}/>\r\n                            </div>\r\n                            <h2>Event Capacity(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{height:'100px', marginTop:'1em',marginLeft:'1em'}}>\r\n                                <TextField type=\"number\" name= \"eventCapacity\" id=\"standard-basic\" value={this.state.eventCapacity} label=\"Event Capacity\" onChange={(event)=>this.handleInput(event)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Event Destination(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{display:'flex',justifyContent:'space-evenly',alignItems:'center'}}>\r\n                                <div style={{marginTop:'10px',marginBottom:'10px'}}>\r\n                                    <MapContainer curLat={10} curLng={10} locationChoosed={location => this.setState({locationLat:location.lat,locationLng:location.lng})}></MapContainer>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Enter Adress Here:</p>\r\n                                    <div>\r\n                                        <TextareaAutosize aria-label=\"empty textarea\" placeholder=\"Empty\" value={this.state.locationText} \r\n                                        onChange={(text)=>{this.setState({locationText:text})}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Time(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <DateSection curStartDate= {new Date()} curEndDate={new Date()} data ='a' dateChoosed={date => {\r\n                                this.setState({startDate: date.substring(0,date.indexOf(\"G\")), \r\n                                endDate: date.substring(53)})}}>\r\n                            </DateSection>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Optinal Choices</h2>\r\n                            <p>This part is for optional questions for the outside user, choose the ones you want to ask</p>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <SwitchSection switchsChoosed={choice => \r\n                                this.setState({switchAge:choice.switchAge,\r\n                                               switchGender:choice.switchGender\r\n                                              })}>\r\n                            </SwitchSection>\r\n                        </div>\r\n                        <div style={{float:'right',marginRight:'100px'}}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={(event) => this.handleCreate(event)}>\r\n                                Create Event\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div></div>\r\n                <div>\r\n                    <Alert alertType={this.state.alertType} msg={this.state.msg} open={this.state.open} alertClose={()=>this.setState({open:false})}></Alert>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddEvent;"]},"metadata":{},"sourceType":"module"}