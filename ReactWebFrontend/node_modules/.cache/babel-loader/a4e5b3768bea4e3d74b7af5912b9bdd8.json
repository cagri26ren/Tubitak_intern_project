{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\Survey\\\\AdminSurvey.js\";\nimport 'date-fns';\nimport React, { Component, Fragment } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios';\nimport SurveyHeader from './SurveyHeader';\nimport SurveyAdminComponent from './SurveyAdminComponent';\nconst uri = \"http://localhost:8080/surveyQuestions\";\nlet number = 0;\n\nfunction getEventArrays(arr) {\n  let newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].participants.length; j++) {\n      for (let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++) {\n        newArr.push(arr[i]);\n      }\n    }\n  }\n\n  return newArr;\n}\n\nfunction getParticipantArrays(arr) {\n  let newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].participants.length; j++) {\n      for (let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++) {\n        newArr.push(arr[i].participants[j]);\n      }\n    }\n  }\n\n  return newArr;\n}\n\nfunction getSurveysArrays(arr) {\n  let newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].participants.length; j++) {\n      for (let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++) {\n        newArr.push(arr[i].participants[j].surveyQuestions[k]);\n      }\n    }\n  }\n\n  return newArr;\n}\n\nclass AdminSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      allEvents: [],\n      allSurveyQuestions: [],\n      allParticipants: [],\n      loaded: false,\n      page: 1\n    };\n  }\n\n  createSurveyComponents(event) {\n    if (this.state.page * 5 > number && number < this.state.allEvents.length) {\n      number = number + 1;\n    }\n\n    console.log(number);\n    return /*#__PURE__*/React.createElement(SurveyAdminComponent, {\n      theNumber: number,\n      eventName: this.state.allEvents[number - 1].name,\n      date: this.state.allEvents[number - 1].startDate.substring(8, 10) + \"-\" + this.state.allEvents[number - 1].startDate.substring(5, 7) + \"-\" + this.state.allEvents[number - 1].startDate.substring(0, 4) + \"/\" + this.state.allEvents[number - 1].startTime.substring(0, 5) + \"  -  \" + this.state.allEvents[number - 1].endDate.substring(8, 10) + \"-\" + this.state.allEvents[number - 1].endDate.substring(5, 7) + \"-\" + this.state.allEvents[number - 1].endDate.substring(0, 4) + \"/\" + this.state.allEvents[number - 1].endTime.substring(0, 5),\n      name: this.state.allParticipants[number - 1].name,\n      surname: this.state.allEvents[number - 1].surname,\n      tc: this.state.allParticipants[number - 1].tcKimlikNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    });\n  }\n\n  componentDidMount() {\n    number = 0;\n    axios.get(uri).then(response => {\n      this.setState({\n        allEvents: getEventArrays(response.data),\n        events: getEventArrays(response.data).slice(0, 5),\n        allParticipants: getParticipantArrays(response.data),\n        allSurveyQuestions: getSurveysArrays(response.data)\n      });\n      console.log(\"finiiiiish\");\n      setTimeout(() => {\n        this.setState({\n          loaded: true\n        });\n      }, 3000);\n      console.log(response);\n    });\n  }\n\n  handlePageChange(event, newPage) {\n    let arr = [...this.state.allEvents].slice(newPage * 5 - 5, newPage * 5);\n    this.setState({\n      page: newPage,\n      events: arr\n    });\n    console.log(\"start\");\n    number = newPage * 5 - 5;\n    console.log(number);\n  }\n\n  render() {\n    console.log(this.state.events);\n    let pagination = this.state.allEvents.length >= 5 && this.state.loaded ? /*#__PURE__*/React.createElement(Pagination, {\n      count: Math.ceil(this.state.allEvents.length / 5),\n      page: this.state.page,\n      color: \"primary\",\n      onChange: (event, newPage) => {\n        this.handlePageChange(event, newPage);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 83\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SurveyHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.state.loaded ? this.state.events.map(event => this.createSurveyComponents(event)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 115\n      }\n    })), pagination);\n  }\n\n}\n\nexport default AdminSurvey;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/Survey/AdminSurvey.js"],"names":["React","Component","Fragment","TextField","history","DateSection","Button","Pagination","MapContainer","TextareaAutosize","axios","SurveyHeader","SurveyAdminComponent","uri","number","getEventArrays","arr","newArr","i","length","j","participants","k","surveyQuestions","push","getParticipantArrays","getSurveysArrays","AdminSurvey","constructor","props","state","events","allEvents","allSurveyQuestions","allParticipants","loaded","page","createSurveyComponents","event","console","log","name","startDate","substring","startTime","endDate","endTime","surname","tcKimlikNo","componentDidMount","get","then","response","setState","data","slice","setTimeout","handlePageChange","newPage","render","pagination","Math","ceil","map"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, {Component,Fragment} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport history from '../../history';\r\nimport DateSection from '../DateSection';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport MapContainer from '../../MapContainer';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport axios from 'axios';\r\nimport SurveyHeader from './SurveyHeader';\r\nimport SurveyAdminComponent from './SurveyAdminComponent';\r\n\r\nconst uri = \"http://localhost:8080/surveyQuestions\";\r\n\r\nlet number = 0;\r\n\r\nfunction getEventArrays( arr ){\r\n    let newArr = [];\r\n\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        for( let j = 0; j < arr[i].participants.length; j++ ){\r\n            for( let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++ ){\r\n                newArr.push(arr[i]);\r\n            }\r\n        }\r\n    }\r\n    return newArr;\r\n}\r\n\r\nfunction getParticipantArrays( arr ){\r\n    let newArr = [];\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        for( let j = 0; j < arr[i].participants.length; j++ ){\r\n            for( let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++ ){\r\n                newArr.push(arr[i].participants[j]);\r\n            }\r\n        }\r\n    }\r\n    return newArr;\r\n}\r\n\r\nfunction getSurveysArrays( arr ){\r\n    let newArr = [];\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        for( let j = 0; j < arr[i].participants.length; j++ ){\r\n            for( let k = 0; k < arr[i].participants[j].surveyQuestions.length; k++ ){\r\n                newArr.push(arr[i].participants[j].surveyQuestions[k]);\r\n            }\r\n        }\r\n    }\r\n    return newArr;\r\n}\r\n\r\n\r\nclass AdminSurvey extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            events:[],\r\n            allEvents:[],\r\n            allSurveyQuestions:[],\r\n            allParticipants:[],\r\n            loaded:false,\r\n            page:1\r\n        }\r\n    }\r\n\r\n    createSurveyComponents(event){\r\n\r\n        if(this.state.page*5 > number && number < this.state.allEvents.length ){\r\n            number = number + 1;\r\n        }\r\n\r\n        console.log(number);\r\n        return(\r\n            <SurveyAdminComponent\r\n                theNumber = {number}\r\n                eventName={this.state.allEvents[number-1].name} \r\n                date={this.state.allEvents[number-1].startDate.substring(8,10) + \"-\"+ this.state.allEvents[number-1].startDate.substring(5,7) + \"-\"+ this.state.allEvents[number-1].startDate.substring(0,4) + \"/\" + this.state.allEvents[number-1].startTime.substring(0,5)\r\n                    +\"  -  \" + this.state.allEvents[number-1].endDate.substring(8,10) + \"-\"+ this.state.allEvents[number-1].endDate.substring(5,7) + \"-\"+ this.state.allEvents[number-1].endDate.substring(0,4) + \"/\" + this.state.allEvents[number-1].endTime.substring(0,5)} \r\n                name={this.state.allParticipants[number-1].name}\r\n                surname={this.state.allEvents[number-1].surname}\r\n                tc={this.state.allParticipants[number-1].tcKimlikNo}\r\n            >\r\n            </SurveyAdminComponent>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        number = 0;\r\n        axios.get(uri).then(response => {\r\n            this.setState({\r\n                allEvents:getEventArrays(response.data),\r\n                events:getEventArrays(response.data).slice(0,5),\r\n                allParticipants:getParticipantArrays(response.data),\r\n                allSurveyQuestions:getSurveysArrays(response.data)\r\n           })\r\n            console.log(\"finiiiiish\");\r\n            setTimeout( ()=>{this.setState({loaded:true})},3000);\r\n            console.log(response)\r\n        });\r\n    } \r\n\r\n    handlePageChange(event,newPage){\r\n        let arr = [...this.state.allEvents].slice(newPage*5 - 5 , newPage * 5);\r\n\r\n        this.setState({page:newPage,events:arr});\r\n        console.log(\"start\");\r\n        number = newPage * 5 - 5;\r\n        console.log(number);\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.state.events);\r\n        let pagination = (this.state.allEvents.length >= 5 && this.state.loaded) ?<Pagination count={Math.ceil(this.state.allEvents.length/5)} page={this.state.page} color=\"primary\" onChange={(event,newPage)=>{this.handlePageChange(event,newPage)}} />\r\n        : <div></div>\r\n        return(\r\n            <div>\r\n                <SurveyHeader></SurveyHeader>\r\n                <div>\r\n                    {(this.state.loaded) ? this.state.events.map( event => this.createSurveyComponents(event) ) : <div></div>}\r\n                </div>\r\n                {pagination}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AdminSurvey;"]},"metadata":{},"sourceType":"module"}