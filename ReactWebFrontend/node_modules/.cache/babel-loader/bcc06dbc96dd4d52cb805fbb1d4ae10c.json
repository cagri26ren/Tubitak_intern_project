{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\Login.js\";\nimport React, { useState, useContext, useEffect, Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { UserContext } from \"../UserContext\";\nimport Button from '@material-ui/core/Button';\nimport Alert from './Alert';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.style = {\n      \"username\": \"\",\n      \"password\": \"\",\n      \"open\": false,\n      \"user\": UserContext\n    };\n\n    this.loin = async (a, b) => {\n      return {\n        \"username\": a,\n        \"password\": b\n      };\n    };\n\n    this.handleChange = event => {\n      if (event.target.name == \"username\") {\n        this.setState({\n          \"username\": event.target.value\n        });\n      } else {\n        this.setState({\n          \"password\": event.target.value\n        });\n      }\n    };\n\n    this.handleLogin = async () => {\n      if (username == \"\") {\n        alert = /*#__PURE__*/React.createElement(Alert, {\n          alertType: \"error\",\n          msg: \"Username cannot be empty\",\n          open: this.state.open,\n          alertClose: () => this.setStyle({\n            \"open\": false\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        });\n      } else if (password == \"\") {\n        alert = /*#__PURE__*/React.createElement(Alert, {\n          alertType: \"error\",\n          msg: \"Password cannot be empty\",\n          open: this.state.open,\n          alertClose: () => this.setStyle({\n            \"open\": false\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        });\n      } else {\n        const u = await loin(username, password);\n        this.setState({\n          \"user\": u\n        });\n        console.log(u);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"550px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"20%\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\",\n        marginLeft: \"500px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      name: \"username\",\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      placeholder: \"Username\",\n      value: this.state.username,\n      size: \"medium\",\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: event => this.handleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"password\",\n      id: \"standard-full-width2\",\n      style: {\n        margin: 8\n      },\n      placeholder: \"Password\",\n      size: \"medium\",\n      value: this.state.password,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: event => this.handleChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Primary\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, alert));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/Login.js"],"names":["React","useState","useContext","useEffect","Component","TextField","UserContext","Button","Alert","Login","style","loin","a","b","handleChange","event","target","name","setState","value","handleLogin","username","alert","state","open","setStyle","password","u","console","log","render","height","width","justifyContent","display","flexDirection","marginTop","marginLeft","margin","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useContext,useEffect, Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {UserContext} from \"../UserContext\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from './Alert';\r\n\r\nclass Login extends Component{\r\n    style={\r\n        \"username\":\"\",\r\n        \"password\":\"\",\r\n        \"open\":false,\r\n        \"user\":UserContext\r\n    }\r\n\r\n   // useEffect(()=> {console.log(user)})\r\n\r\n    loin = async (a,b) => {\r\n        return{\r\n            \"username\": a,\r\n            \"password\": b\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        if(event.target.name == \"username\"){\r\n            this.setState({\"username\":event.target.value});\r\n        }\r\n        else{\r\n            this.setState({\"password\":event.target.value});\r\n        }\r\n    }\r\n\r\n        handleLogin = async () =>{\r\n        if(username == \"\"){\r\n            alert = <Alert alertType=\"error\" msg=\"Username cannot be empty\" open={this.state.open} alertClose={()=>this.setStyle({\"open\":false})}></Alert>\r\n        }\r\n        else if(password == \"\" ){\r\n            alert = <Alert alertType=\"error\" msg=\"Password cannot be empty\" open={this.state.open} alertClose={()=>this.setStyle({\"open\":false})}></Alert>\r\n        }\r\n        else{\r\n           const u = await loin(username,password);\r\n           this.setState({\"user\":u});\r\n           console.log(u);\r\n        }\r\n\r\n    }\r\n    render(){\r\n    return(\r\n        <div style={{height:\"550px\"}}>\r\n            <div style={{width:\"20%\",justifyContent:\"center\", display:\"flex\",flexDirection:\"column\",marginTop:\"10%\",marginLeft:\"500px\"}}>\r\n                <h1>Login</h1>\r\n                <TextField\r\n                    name = \"username\"\r\n                    id=\"standard-full-width\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Username\"\r\n                    value={this.state.username}\r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(event)=>this.handleChange(event)}\r\n                />\r\n                <TextField\r\n                    name=\"password\"\r\n                    id=\"standard-full-width2\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Password\"\r\n                    size=\"medium\"\r\n                    value={this.state.password}\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(event)=>this.handleChange(event)}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleLogin}>\r\n                    Primary\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {alert}\r\n            </div>\r\n        </div>\r\n    )\r\n                }\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}