{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar HashChangeEvent = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n  var _props$basename = props.basename;\n  var basename = _props$basename === undefined ? '' : _props$basename;\n  var _props$getUserConfirm = props.getUserConfirmation;\n  var getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm;\n  var _props$hashType = props.hashType;\n  var hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var _HashPathCoders$hashT = HashPathCoders[hashType];\n  var encodePath = _HashPathCoders$hashT.encodePath;\n  var decodePath = _HashPathCoders$hashT.decodePath;\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    if (basename) path = (0, _PathUtils.stripPrefix)(path, basename);\n    return (0, _PathUtils.parsePath)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      (function () {\n        var action = 'POP';\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n          if (ok) {\n            setState({\n              action: action,\n              location: location\n            });\n          } else {\n            revertPop(location);\n          }\n        });\n      })();\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }; // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)]; // Public interface\n\n  var push = function push(path, state) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      return unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexports.default = createHashHistory;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Documents/GitHub/Tubitak_intern_project/ReactWebFrontend/node_modules/history/createHashHistory.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_warning","require","_warning2","_interopRequireDefault","_invariant","_invariant2","_LocationUtils","_PathUtils","_createTransitionManager","_createTransitionManager2","_ExecutionEnvironment","_DOMUtils","obj","default","HashChangeEvent","HashPathCoders","hashbang","encodePath","path","charAt","stripLeadingSlash","decodePath","substr","noslash","addLeadingSlash","slash","getHashPath","href","window","location","hashIndex","indexOf","substring","pushHashPath","hash","replaceHashPath","replace","slice","createHashHistory","props","undefined","canUseDOM","process","env","NODE_ENV","globalHistory","history","canGoWithoutReload","supportsGoWithoutReloadUsingHash","_props$basename","basename","_props$getUserConfirm","getUserConfirmation","getConfirmation","_props$hashType","hashType","_HashPathCoders$hashT","getDOMLocation","stripPrefix","parsePath","transitionManager","setState","nextState","notifyListeners","action","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","locationsAreEqual","createPath","handlePop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","toIndex","allPaths","lastIndexOf","fromIndex","delta","go","initialLocation","push","state","createLocation","hashChanged","prevIndex","nextPaths","n","goBack","goForward","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n\n  var _props$basename = props.basename;\n  var basename = _props$basename === undefined ? '' : _props$basename;\n  var _props$getUserConfirm = props.getUserConfirmation;\n  var getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm;\n  var _props$hashType = props.hashType;\n  var hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var _HashPathCoders$hashT = HashPathCoders[hashType];\n  var encodePath = _HashPathCoders$hashT.encodePath;\n  var decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    if (basename) path = (0, _PathUtils.stripPrefix)(path, basename);\n\n    return (0, _PathUtils.parsePath)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      (function () {\n        var action = 'POP';\n\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n          if (ok) {\n            setState({ action: action, location: location });\n          } else {\n            revertPop(location);\n          }\n        });\n      })();\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var push = function push(path, state) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      return unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createHashHistory;"]},"metadata":{},"sourceType":"script"}