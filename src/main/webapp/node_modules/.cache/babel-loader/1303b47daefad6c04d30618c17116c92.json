{"ast":null,"code":"/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n/**\n * Adds the icon to the DOM.\n */\n\n\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_); // Fix for Issue 157\n\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds); // There is a fix for Issue 170 here:\n\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds); // Don't zoom beyond the max zoom level\n\n          if (mz !== null && mc.getMap().getZoom() > mz) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      } // Prevent event propagation to the map:\n\n\n      e.cancelBubble = true;\n\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n/**\n * Removes the icon from the DOM.\n */\n\n\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n/**\n * Draws the icon.\n */\n\n\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n/**\n * Hides the icon.\n */\n\n\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n\n  this.visible_ = false;\n};\n/**\n * Positions and shows the icon.\n */\n\n\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\"; // NOTE: values must be specified in px units\n\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + -1 * spriteV + \"px, \" + (-1 * spriteH + this.width_) + \"px, \" + (-1 * spriteV + this.height_) + \"px, \" + -1 * spriteH + \"px);\";\n    }\n\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" + \"position: absolute;\" + \"top: \" + this.anchorText_[0] + \"px;\" + \"left: \" + this.anchorText_[1] + \"px;\" + \"color: \" + this.textColor_ + \";\" + \"font-size: \" + this.textSize_ + \"px;\" + \"font-family: \" + this.fontFamily_ + \";\" + \"font-weight: \" + this.fontWeight_ + \";\" + \"font-style: \" + this.fontStyle_ + \";\" + \"text-decoration: \" + this.textDecoration_ + \";\" + \"text-align: center;\" + \"width: \" + this.width_ + \"px;\" + \"line-height:\" + this.height_ + \"px;\" + \"'>\" + this.sums_.text + \"</div>\";\n\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n\n    this.div_.style.display = \"\";\n  }\n\n  this.visible_ = true;\n};\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\n\n\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\n\n\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\n\n\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\n\n\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\n\n\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\n\n\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\n\n\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\n\n\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\n\n\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\n\n\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\n\n\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  return bounds;\n};\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\n\n\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\n\n\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\n\n\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\n\n\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n/**\n * Updates the cluster icon.\n */\n\n\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\n\n\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\n\n\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n\n  this.averageCenter_ = false;\n\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n\n  this.ignoreHidden_ = false;\n\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n\n  this.enableRetinaIcons_ = false;\n\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n  this.repaint(); // Add the map event listeners\n\n  this.listeners_ = [google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n    cMarkerClusterer.resetViewport_(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\n    // event is triggered so the cluster markers that have been removed\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n    if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n      google.maps.event.trigger(this, \"idle\");\n    }\n  }), google.maps.event.addListener(this.getMap(), \"idle\", function () {\n    cMarkerClusterer.redraw_();\n  })];\n};\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.onRemove = function () {\n  var i; // Put all the managed markers back on the map:\n\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  } // Remove all clusters:\n\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n\n  this.clusters_ = []; // Remove map event listeners:\n\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.draw = function () {};\n/**\n * Sets up the styles object.\n */\n\n\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\n\n\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\n\n\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\n\n\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\n\n\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\n\n\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\n\n\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\n\n\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\n\n\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\n\n\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\n\n\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\n\n\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\n\n\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\n\n\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\n\n\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\n\n\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\n\n\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\n\n\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\n\n\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\n\n\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\n\n\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\n\n\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\n\n\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\n\n\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\n\n\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\n\n\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\n\n\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\n\n\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\n\n\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\n\n\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\n\n\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\n\n\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\n\n\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\n\n\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }\n\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\n\n\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\n\n\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\n\n\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\n\n\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n\n  return true;\n};\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\n\n\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_(); // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n\n  setTimeout(function () {\n    var i;\n\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection(); // Turn the bounds into latlng.\n\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()); // Convert the points to pixels and the extend out by the grid size.\n\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_; // Convert the pixel points back to LatLng\n\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix); // Extend the bounds to contain the new bounds.\n\n  bounds.extend(ne);\n  bounds.extend(sw);\n  return bounds;\n};\n/**\n * Redraws all the clusters.\n */\n\n\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\n\n\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker; // Remove all the clusters\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n\n  this.clusters_ = []; // Reset the markers to not be added and to be removed from the map.\n\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\n\n\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\n\n\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\n\n\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n\n  var clusterToAddTo = null;\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\n\n\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n\n  if (!this.ready_) {\n    return;\n  } // Cancel previous batch processing if we're working on the first batch:\n\n\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  } // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(), this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n\n  var bounds = this.getExtendedBounds(mapBounds);\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || this.ignoreHidden_ && marker.getVisible()) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return function (object) {\n    var property;\n\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n\n    return this;\n  }.apply(obj1, [obj2]);\n};\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\n\n\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n  var dv = count;\n\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\n\n\nMarkerClusterer.BATCH_SIZE = 2000;\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\n\nMarkerClusterer.BATCH_SIZE_IE = 500;\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\n\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\n\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\n\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\nmodule.exports = MarkerClusterer;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/node_modules/marker-clusterer-plus/src/markerclusterer.js"],"names":["ClusterIcon","cluster","styles","getMarkerClusterer","extend","google","maps","OverlayView","cluster_","className_","getClusterClass","styles_","center_","div_","sums_","visible_","setMap","getMap","prototype","onAdd","cClusterIcon","cMouseDownInCluster","cDraggingMapByCluster","document","createElement","className","show","getPanes","overlayMouseTarget","appendChild","boundsChangedListener_","event","addListener","addDomListener","e","theBounds","mz","mc","trigger","getZoomOnClick","getMaxZoom","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","pos","getPosFromLatLng_","style","top","y","left","x","display","img","bp","backgroundPosition_","split","spriteH","parseInt","replace","spriteV","cssText","createCss","url_","enableRetinaIcons_","width_","height_","innerHTML","anchorText_","textColor_","textSize_","fontFamily_","fontWeight_","fontStyle_","textDecoration_","text","title","getTitle","useStyle","sums","index","Math","max","min","length","url","height","width","anchorText","anchorIcon_","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setCenter","center","push","join","latlng","getProjection","fromLatLngToDivPixel","Cluster","markerClusterer_","map_","gridSize_","getGridSize","minClusterSize_","getMinimumClusterSize","averageCenter_","getAverageCenter","markers_","bounds_","clusterIcon_","getStyles","getSize","getMarkers","getCenter","i","bounds","LatLngBounds","markers","getPosition","remove","addMarker","marker","mCount","isMarkerAlreadyAdded_","calculateBounds_","l","lat","lng","LatLng","isAdded","updateIcon_","isMarkerInClusterBounds","contains","getExtendedBounds","numStyles","getCalculator","indexOf","MarkerClusterer","map","opt_markers","opt_options","clusters_","listeners_","activeMap_","ready_","gridSize","minimumClusterSize","maxZoom_","maxZoom","title_","zoomOnClick_","zoomOnClick","undefined","averageCenter","ignoreHidden_","ignoreHidden","enableRetinaIcons","imagePath_","imagePath","IMAGE_PATH","imageExtension_","imageExtension","IMAGE_EXTENSION","imageSizes_","imageSizes","IMAGE_SIZES","calculator_","calculator","CALCULATOR","batchSize_","batchSize","BATCH_SIZE","batchSizeIE_","batchSizeIE","BATCH_SIZE_IE","clusterClass_","clusterClass","navigator","userAgent","toLowerCase","setupStyles_","addMarkers","cMarkerClusterer","repaint","resetViewport_","get","redraw_","size","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","opt_nodraw","pushMarkerTo_","key","hasOwnProperty","getDraggable","removeMarker","removed","removeMarker_","removeMarkers","r","splice","clearMarkers","oldClusters","slice","projection","tr","getNorthEast","bl","getSouthWest","trPix","blPix","ne","fromDivPixelToLatLng","sw","createClusters_","opt_hide","distanceBetweenPoints_","p1","p2","R","dLat","PI","dLon","a","sin","cos","c","atan2","sqrt","d","isMarkerInBounds_","addToClosestCluster_","distance","clusterToAddTo","iFirst","mapBounds","timerRefStatic","clearTimeout","iLast","getVisible","obj1","obj2","object","property","apply","count","toString","dv","module","exports"],"mappings":"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","sourcesContent":["/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Adds the icon to the DOM.\n */\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_);\n\n  // Fix for Issue 157\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds);\n        // There is a fix for Issue 170 here:\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds);\n          // Don't zoom beyond the max zoom level\n          if (mz !== null && (mc.getMap().getZoom() > mz)) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      }\n\n      // Prevent event propagation to the map:\n      e.cancelBubble = true;\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n\n\n/**\n * Removes the icon from the DOM.\n */\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Draws the icon.\n */\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n\n\n/**\n * Hides the icon.\n */\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Positions and shows the icon.\n */\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\";\n    // NOTE: values must be specified in px units\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + (-1 * spriteV) + \"px, \" + ((-1 * spriteH) + this.width_) + \"px, \" +\n          ((-1 * spriteV) + this.height_) + \"px, \" + (-1 * spriteH) + \"px);\";\n    }\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" +\n        \"position: absolute;\" +\n        \"top: \" + this.anchorText_[0] + \"px;\" +\n        \"left: \" + this.anchorText_[1] + \"px;\" +\n        \"color: \" + this.textColor_ + \";\" +\n        \"font-size: \" + this.textSize_ + \"px;\" +\n        \"font-family: \" + this.fontFamily_ + \";\" +\n        \"font-weight: \" + this.fontWeight_ + \";\" +\n        \"font-style: \" + this.fontStyle_ + \";\" +\n        \"text-decoration: \" + this.textDecoration_ + \";\" +\n        \"text-align: center;\" +\n        \"width: \" + this.width_ + \"px;\" +\n        \"line-height:\" + this.height_ + \"px;\" +\n        \"'>\" + this.sums_.text + \"</div>\";\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n    this.div_.style.display = \"\";\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n\n\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n\n\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n\n\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n\n\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n\n\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n\n\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n\n\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n\n\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n\n\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Updates the cluster icon.\n */\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n  this.averageCenter_ = false;\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n  this.ignoreHidden_ = false;\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n  this.enableRetinaIcons_ = false;\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n\n  this.repaint();\n\n  // Add the map event listeners\n  this.listeners_ = [\n    google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n      cMarkerClusterer.resetViewport_(false);\n      // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n      if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n        google.maps.event.trigger(this, \"idle\");\n      }\n    }),\n    google.maps.event.addListener(this.getMap(), \"idle\", function () {\n      cMarkerClusterer.redraw_();\n    })\n  ];\n};\n\n\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\nMarkerClusterer.prototype.onRemove = function () {\n  var i;\n\n  // Put all the managed markers back on the map:\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  }\n\n  // Remove all clusters:\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Remove map event listeners:\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n  this.listeners_ = [];\n\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n\n\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function () {};\n\n\n/**\n * Sets up the styles object.\n */\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n\n\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n\n\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n\n\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n\n\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n\n\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n\n\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n\n\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n\n\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n\n\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n\n\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n\n\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n\n\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n\n\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n\n\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n\n\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n\n\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n\n\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n\n\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n\n\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n\n\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n\n\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n\n\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n\n\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n\n\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n\n\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n\n\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n\n\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }  \n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n\n\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n  return true;\n};\n\n\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n\n\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_();\n\n  // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n  setTimeout(function () {\n    var i;\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Redraws all the clusters.\n */\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n\n\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker;\n  // Remove all the clusters\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Reset the markers to not be added and to be removed from the map.\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n  if (!this.ready_) {\n    return;\n  }\n\n  // Cancel previous batch processing if we're working on the first batch:\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),\n      this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || (this.ignoreHidden_ && marker.getVisible())) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return (function (object) {\n    var property;\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n\n\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE = 2000;\n\n\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE_IE = 500;\n\n\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n\n\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n\n\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\n\nmodule.exports = MarkerClusterer\n"]},"metadata":{},"sourceType":"script"}