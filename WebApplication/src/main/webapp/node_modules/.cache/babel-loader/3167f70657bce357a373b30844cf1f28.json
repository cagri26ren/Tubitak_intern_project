{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\OtherQuestions.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction OtherQuestions(props) {\n  let number = 0;\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [showButton, setShowButton] = useState(false);\n\n  const handleCreate = event => {\n    number = 0;\n    let arr = [];\n\n    for (let i = 0; i < questionNumber; i++) {\n      arr.push(\"\");\n    }\n\n    setQuestions(arr);\n    setShowButton(true);\n  };\n\n  const handleInput = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    let arr = [...questions];\n    arr[name] = value;\n    setQuestions(arr);\n  };\n\n  const createEventComponents = event => {\n    number = number + 1;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: number - 1,\n      id: \"standard-basic\",\n      value: questions[number - 1],\n      label: \"Question\" + number,\n      onChange: event => handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  let button = showButton ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: event => props.addQuestions(questions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  }, \"Add questions\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 150\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    name: \"otherQuestionNumberField\",\n    value: questionNumber,\n    label: props.type === 'other' ? 'Number of Questions' : 'Number of Survey Questions',\n    onChange: event => setQuestionNumber(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: event => handleCreate(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, props.type === 'other' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 55\n    }\n  }, \"Generate Questions \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 88\n    }\n  }, \"Generate Survey\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, questions.map(question => createEventComponents(question)), showButton ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: event => props.addQuestions(questions, props.type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 61\n    }\n  }, \"Add questions\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 195\n    }\n  })));\n}\n\nexport default OtherQuestions;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/OtherQuestions.js"],"names":["React","useState","TextField","Button","OtherQuestions","props","number","questionNumber","setQuestionNumber","questions","setQuestions","showButton","setShowButton","handleCreate","event","arr","i","push","handleInput","name","target","value","createEventComponents","button","addQuestions","display","flexDirection","flexWrap","justifyContent","type","map","question","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction OtherQuestions(props) {\r\n    let number = 0;\r\n    const[questionNumber,setQuestionNumber] = useState(0);\r\n    const[questions,setQuestions] = useState([]);\r\n    const[showButton,setShowButton] = useState(false);\r\n\r\n    const handleCreate=(event)=>{\r\n        number = 0;\r\n        let arr = [];\r\n        for( let i = 0; i < questionNumber; i++ ){\r\n            arr.push(\"\");\r\n        }\r\n        setQuestions(arr);\r\n        setShowButton(true);\r\n    }\r\n\r\n    const handleInput=(event)=>{\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        let arr = [...questions];\r\n        arr[name] =value;\r\n        setQuestions(arr);\r\n    }\r\n\r\n\r\n    const createEventComponents = (event) =>{\r\n        number = number + 1;\r\n        return(\r\n            <div>\r\n                <TextField name= {number-1} id=\"standard-basic\" value={questions[number-1]} label={\"Question\" + number} onChange={(event)=>handleInput(event)}/>\r\n            </div>\r\n        )\r\n    }\r\n    let button =  (showButton)?<Button variant=\"contained\" color=\"primary\" onClick={(event)=>props.addQuestions(questions)}>Add questions</Button> : <div></div>\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display:'flex',flexDirection:'row', flexWrap:'wrap',justifyContent:'space-evenly'}}>\r\n                <div>\r\n                    <TextField type=\"number\" name= \"otherQuestionNumberField\" value={questionNumber} label={props.type === 'other' ? 'Number of Questions' : 'Number of Survey Questions'} onChange={(event)=>setQuestionNumber(event.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={(event) => handleCreate(event)}>\r\n                            {props.type === 'other' ? <div>Generate Questions </div> : <div>Generate Survey</div>}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div >\r\n                {questions.map( question => createEventComponents(question) )}\r\n\r\n                {(showButton)?<div style={{marginTop:'2%'}}><Button variant=\"contained\" color=\"primary\" onClick={(event)=>props.addQuestions(questions,props.type)}>Add questions</Button></div>: <div></div>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtherQuestions;"]},"metadata":{},"sourceType":"module"}