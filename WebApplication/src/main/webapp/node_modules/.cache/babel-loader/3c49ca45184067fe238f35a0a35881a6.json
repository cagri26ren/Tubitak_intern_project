{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\MapContainer.js\";\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: 38,\n  lng: 35\n};\n\nfunction MyComponent(props, {\n  locationChoosed\n}) {\n  const [map, setMap] = React.useState(null);\n  const [newLat, setNewLat] = React.useState(null);\n  const [newLng, setNewLng] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBCeAgR3VSJLN36d8Ip2OGE2X64_K-7l2E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onClick: event => {\n      console.log(props.a);\n      locationChoosed({\n        lat: newLat,\n        lng: newLng\n      });\n      setNewLat(event.latLng.lat());\n      setNewLng(event.latLng.lng());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: newLat,\n      lng: newLng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default React.memo(MyComponent);","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/MapContainer.js"],"names":["React","GoogleMap","LoadScript","Marker","containerStyle","width","height","center","lat","lng","MyComponent","props","locationChoosed","map","setMap","useState","newLat","setNewLat","newLng","setNewLng","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","event","console","log","a","latLng","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,EADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAACC,EAAAA;AAAD,CAA3B,EAA8C;AAC5C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAtB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBjB,KAAK,CAACe,QAAN,CAAe,IAAf,CAA3B;AACA,QAAM,CAACG,MAAD,EAAQC,SAAR,IAAqBnB,KAAK,CAACe,QAAN,CAAe,IAAf,CAA3B;AAEA,QAAMK,MAAM,GAAGpB,KAAK,CAACqB,WAAN,CAAkB,SAASC,QAAT,CAAkBT,GAAlB,EAAuB;AACtD,UAAMU,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAd,IAAAA,GAAG,CAACe,SAAJ,CAAcL,MAAd;AACAT,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,QAAMgB,SAAS,GAAG7B,KAAK,CAACqB,WAAN,CAAkB,SAASC,QAAT,CAAkBT,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,sBACE,oBAAC,UAAD;AACE,IAAA,gBAAgB,EAAC,yCADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEV,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,OAAO,EAAGuB,KAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAK,CAACsB,CAAlB;AACArB,MAAAA,eAAe,CAAC;AAACJ,QAAAA,GAAG,EAAEQ,MAAN;AAAcP,QAAAA,GAAG,EAAES;AAAnB,OAAD,CAAf;AACAD,MAAAA,SAAS,CAACa,KAAK,CAACI,MAAN,CAAa1B,GAAb,EAAD,CAAT;AACAW,MAAAA,SAAS,CAACW,KAAK,CAACI,MAAN,CAAazB,GAAb,EAAD,CAAT;AACH,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE;AAACD,MAAAA,GAAG,EAAEQ,MAAN;AAAcP,MAAAA,GAAG,EAACS;AAAlB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAHF,CADF;AAoBD;;AAED,eAAelB,KAAK,CAACmC,IAAN,CAAWzB,WAAX,CAAf","sourcesContent":["import React from 'react'\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n \r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '400px'\r\n};\r\n \r\nconst center = {\r\n  lat: 38,\r\n  lng: 35\r\n};\r\n \r\nfunction MyComponent(props,{locationChoosed}) {\r\n  const [map, setMap] = React.useState(null)\r\n  const [newLat,setNewLat] = React.useState(null);\r\n  const [newLng,setNewLng] = React.useState(null);\r\n \r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n \r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return (\r\n    <LoadScript\r\n      googleMapsApiKey=\"AIzaSyBCeAgR3VSJLN36d8Ip2OGE2X64_K-7l2E\"\r\n    >\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onClick={(event)=>{\r\n            console.log(props.a);\r\n            locationChoosed({lat: newLat, lng: newLng});\r\n            setNewLat(event.latLng.lat());\r\n            setNewLng(event.latLng.lng());\r\n        }}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        <Marker position={{lat: newLat, lng:newLng}}/>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  )\r\n}\r\n \r\nexport default React.memo(MyComponent)"]},"metadata":{},"sourceType":"module"}