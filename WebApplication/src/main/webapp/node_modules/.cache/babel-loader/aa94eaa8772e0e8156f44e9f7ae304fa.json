{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Documents\\\\GitHub\\\\Tubitak_intern_project\\\\WebApplication\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\Survey\\\\AdminSurvey.js\";\nimport 'date-fns';\nimport React, { Component, Fragment } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios';\nimport SurveyHeader from './SurveyHeader';\nimport SurveyAdminComponent from './SurveyAdminComponent';\nconst uri = \"http://localhost:8080/surveyQuestions\";\nlet number = 0;\n\nfunction getEventArrays(arr) {\n  let newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].participants.length; j++) {\n      newArr.push(arr[i]);\n    }\n  }\n\n  return newArr;\n}\n\nfunction getParticipantArrays(arr) {\n  let newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].participants.length; j++) {\n      newArr.push(arr[i].participants[j]);\n    }\n  }\n\n  return newArr;\n}\n\nclass AdminSurvey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      allEvents: [],\n      allParticipants: [],\n      loaded: false,\n      page: 1\n    };\n  }\n\n  createSurveyComponents(event) {\n    if (this.state.page * 5 > number && number < this.state.allEvents.length) {\n      number = number + 1;\n    }\n\n    console.log(number);\n    return /*#__PURE__*/React.createElement(SurveyAdminComponent, {\n      theNumber: number,\n      eventName: this.state.allEvents[number - 1].name,\n      date: this.state.allEvents[number - 1].startDate.substring(8, 10) + \"-\" + this.state.allEvents[number - 1].startDate.substring(5, 7) + \"-\" + this.state.allEvents[number - 1].startDate.substring(0, 4) + \"/\" + this.state.allEvents[number - 1].startTime.substring(0, 5) + \"  -  \" + this.state.allEvents[number - 1].endDate.substring(8, 10) + \"-\" + this.state.allEvents[number - 1].endDate.substring(5, 7) + \"-\" + this.state.allEvents[number - 1].endDate.substring(0, 4) + \"/\" + this.state.allEvents[number - 1].endTime.substring(0, 5),\n      name: this.state.allParticipants[number - 1].name,\n      surname: this.state.allEvents[number - 1].surname,\n      tc: this.state.allParticipants[number - 1].tcKimlikNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  }\n\n  componentDidMount() {\n    number = 0;\n    axios.get(uri).then(response => {\n      this.setState({\n        allEvents: getEventArrays(response.data),\n        events: getEventArrays(response.data).slice(0, 5),\n        allParticipants: getParticipantArrays(response.data)\n      });\n      console.log(\"finiiiiish\");\n      setTimeout(() => {\n        this.setState({\n          loaded: true\n        });\n      }, 3000);\n      console.log(response);\n    });\n  }\n\n  handlePageChange(event, newPage) {\n    let arr = [...this.state.allEvents].slice(newPage * 5 - 5, newPage * 5);\n    this.setState({\n      page: newPage,\n      events: arr\n    });\n    console.log(\"start\");\n    number = newPage * 5 - 5;\n    console.log(number);\n  }\n\n  render() {\n    console.log(this.state.events);\n    let pagination = this.state.allEvents.length >= 5 && this.state.loaded ? /*#__PURE__*/React.createElement(Pagination, {\n      count: Math.ceil(this.state.allEvents.length / 5),\n      page: this.state.page,\n      color: \"primary\",\n      onChange: (event, newPage) => {\n        this.handlePageChange(event, newPage);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 83\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SurveyHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, this.state.loaded ? this.state.events.map(event => this.createSurveyComponents(event)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 115\n      }\n    })), pagination);\n  }\n\n}\n\nexport default AdminSurvey;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Documents/GitHub/Tubitak_intern_project/WebApplication/src/main/webapp/src/components/Survey/AdminSurvey.js"],"names":["React","Component","Fragment","TextField","history","DateSection","Button","Pagination","MapContainer","TextareaAutosize","axios","SurveyHeader","SurveyAdminComponent","uri","number","getEventArrays","arr","newArr","i","length","j","participants","push","getParticipantArrays","AdminSurvey","constructor","props","state","events","allEvents","allParticipants","loaded","page","createSurveyComponents","event","console","log","name","startDate","substring","startTime","endDate","endTime","surname","tcKimlikNo","componentDidMount","get","then","response","setState","data","slice","setTimeout","handlePageChange","newPage","render","pagination","Math","ceil","map"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React, {Component,Fragment} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios';\nimport SurveyHeader from './SurveyHeader';\nimport SurveyAdminComponent from './SurveyAdminComponent';\n\nconst uri = \"http://localhost:8080/surveyQuestions\";\n\nlet number = 0;\n\nfunction getEventArrays( arr ){\n    let newArr = [];\n\n    for( let i = 0; i < arr.length; i++ ){\n        for( let j = 0; j < arr[i].participants.length; j++ ){\n                newArr.push(arr[i]);\n        }\n    }\n    return newArr;\n}\n\nfunction getParticipantArrays( arr ){\n    let newArr = [];\n    for( let i = 0; i < arr.length; i++ ){\n        for( let j = 0; j < arr[i].participants.length; j++ ){\n                newArr.push(arr[i].participants[j]);\n        }\n    }\n    return newArr;\n}\n\n\nclass AdminSurvey extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            events:[],\n            allEvents:[],\n            allParticipants:[],\n            loaded:false,\n            page:1\n        }\n    }\n\n    createSurveyComponents(event){\n\n        if(this.state.page*5 > number && number < this.state.allEvents.length ){\n            number = number + 1;\n        }\n\n        console.log(number);\n        return(\n            <SurveyAdminComponent\n                theNumber = {number}\n                eventName={this.state.allEvents[number-1].name} \n                date={this.state.allEvents[number-1].startDate.substring(8,10) + \"-\"+ this.state.allEvents[number-1].startDate.substring(5,7) + \"-\"+ this.state.allEvents[number-1].startDate.substring(0,4) + \"/\" + this.state.allEvents[number-1].startTime.substring(0,5)\n                    +\"  -  \" + this.state.allEvents[number-1].endDate.substring(8,10) + \"-\"+ this.state.allEvents[number-1].endDate.substring(5,7) + \"-\"+ this.state.allEvents[number-1].endDate.substring(0,4) + \"/\" + this.state.allEvents[number-1].endTime.substring(0,5)} \n                name={this.state.allParticipants[number-1].name}\n                surname={this.state.allEvents[number-1].surname}\n                tc={this.state.allParticipants[number-1].tcKimlikNo}\n            >\n            </SurveyAdminComponent>\n        )\n    }\n\n    componentDidMount(){\n        number = 0;\n        axios.get(uri).then(response => {\n            this.setState({\n                allEvents:getEventArrays(response.data),\n                events:getEventArrays(response.data).slice(0,5),\n                allParticipants:getParticipantArrays(response.data),\n           })\n            console.log(\"finiiiiish\");\n            setTimeout( ()=>{this.setState({loaded:true})},3000);\n            console.log(response)\n        });\n    } \n\n    handlePageChange(event,newPage){\n        let arr = [...this.state.allEvents].slice(newPage*5 - 5 , newPage * 5);\n\n        this.setState({page:newPage,events:arr});\n        console.log(\"start\");\n        number = newPage * 5 - 5;\n        console.log(number);\n    }\n\n\n    render(){\n        console.log(this.state.events);\n        let pagination = (this.state.allEvents.length >= 5 && this.state.loaded) ?<Pagination count={Math.ceil(this.state.allEvents.length/5)} page={this.state.page} color=\"primary\" onChange={(event,newPage)=>{this.handlePageChange(event,newPage)}} />\n        : <div></div>\n        return(\n            <div>\n                <SurveyHeader></SurveyHeader>\n                <div>\n                    {(this.state.loaded) ? this.state.events.map( event => this.createSurveyComponents(event) ) : <div></div>}\n                </div>\n                {pagination}\n            </div>\n        )\n    }\n\n}\n\nexport default AdminSurvey;"]},"metadata":{},"sourceType":"module"}