{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagri Eren\\\\Desktop\\\\tubitak-project\\\\event-manager-react\\\\src\\\\components\\\\AddEvent\\\\AddEvent.js\";\nimport 'date-fns';\nimport React, { Component } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport AddEventHeader from './AddEventHeader';\nimport SwitchSection from '../SwitchSection';\nimport history from '../../history';\nimport DateSection from '../DateSection';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport MapContainer from '../../MapContainer';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { Data } from '@react-google-maps/api';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport OtherQuestions from '../OtherQuestions';\n/**\r\n * Errors: \r\n * 1-You need to click 2 times to set the location\r\n * 2-End date not gettin correctly (getting realy close to fix)\r\n */\n\nconst uri = \"http://localhost:8080/events\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction getMonthNumberFromName(monthName) {\n  switch (monthName) {\n    case 'Jan':\n      return '01';\n\n    case 'Feb':\n      return '02';\n\n    case 'Mar':\n      return '03';\n\n    case 'Apr':\n      return '04';\n\n    case 'May':\n      return '05';\n\n    case 'Jun':\n      return '06';\n\n    case 'Jul':\n      return '07';\n\n    case 'Aug':\n      return '08';\n\n    case 'Sep':\n      return '09';\n\n    case 'Oct':\n      return '10';\n\n    case 'Nov':\n      return '11';\n\n    case 'Dec':\n      return '12';\n\n    default:\n      return \"error\";\n  }\n}\n\nfunction fixDateForJSON(date) {\n  let year = date.substring(11, 15);\n  let month = getMonthNumberFromName(date.substring(4, 7));\n  let day = date.substring(8, 10);\n  return year + '-' + month + '-' + day;\n}\n\nfunction fixTimeForJSON(date) {\n  let hour = date.substring(16, 18);\n  let minute = date.substring(19, 21);\n  return hour + ':' + minute;\n}\n\nclass AddEvent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventName: \"\",\n      eventCapacity: 0,\n      open: false,\n      msg: \"\",\n      alertType: \"\",\n      locationLat: null,\n      locationLng: null,\n      locationText: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      switchGender: false,\n      switchAge: false,\n      questions: [{}],\n      surveyQuestions: [{}]\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      open: false,\n      msg: '',\n      alertType: ''\n    });\n  }\n\n  handleCreate(event) {\n    if (this.state.eventName === \"\") {\n      this.setState({\n        alertType: \"error\",\n        msg: \"Event name can not be empty\",\n        open: !this.state.open\n      });\n    } else if (this.state.eventCapacity === 0) {\n      this.setState({\n        alertType: \"error\",\n        msg: \"Event capacity can not be empty\",\n        open: !this.state.open\n      });\n    } else if (this.state.locationLat == null || this.state.locationLng == null) {\n      this.setState({\n        alertType: \"error\",\n        msg: \"You must select a location for the event\",\n        open: !this.state.open\n      });\n    } else {\n      const postData = {\n        'name': this.state.eventName,\n        'max': this.state.eventCapacity,\n        'startDate': fixDateForJSON(this.state.startDate),\n        'startTime': fixTimeForJSON(this.state.startDate),\n        'endDate': fixDateForJSON(this.state.endDate),\n        'endTime': fixTimeForJSON(this.state.endDate),\n        'lat': this.state.locationLat,\n        'lng': this.state.locationLng,\n        'askAge': this.state.askAge,\n        'askGender': this.state.askGender,\n        'questions': this.state.questions,\n        'surveyQuestions': this.state.surveyQuestions\n      };\n      axios.post(uri, postData).then(response => {\n        console.log(response);\n        let type;\n\n        if (response.data.messageType === 'ERROR') {\n          type = \"error\";\n        } else {\n          type = \"success\";\n        }\n\n        if (type !== \"success\") {\n          this.setState({\n            open: true,\n            msg: response.data.message,\n            alertType: 'error'\n          });\n        } else {\n          this.props.callbackAlert(response.data.message, type);\n        }\n\n        if (response.data.messageType === 'SUCCESS') {\n          history.push(\"/events\");\n        }\n      }); //Alert the user and pass the data to backend\n      //this.setState({ alertType: \"succes\", msg:\"Event Created\",open:!this.state.open});\n\n      console.log(postData);\n      console.log(this.state.endDate);\n      console.log(this.state.startDate);\n    }\n  }\n\n  handleInput(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleQuestions(questions, type) {\n    if (type === 'other') {\n      setTimeout(() => {\n        let arr = [...questions];\n        this.setState({\n          questions: arr\n        });\n        console.log(this.state.questions);\n      }, 100);\n    } else {\n      setTimeout(() => {\n        let arr = [...questions];\n        this.setState({\n          surveyQuestions: arr\n        });\n        console.log(this.state.questions);\n      }, 100);\n    }\n  }\n\n  handleChange(change) {\n    const name = change.target.name;\n    const value = change.target.checked;\n    this.setState({\n      [name]: value\n    });\n    console.log(value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddEventHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, \"Event Name(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100px',\n        marginTop: '1em',\n        marginLeft: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"eventName\",\n      id: \"standard-basic\",\n      value: this.state.eventName,\n      label: \"Event Name\",\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, \"Event Capacity(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100px',\n        marginTop: '1em',\n        marginLeft: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"eventCapacity\",\n      id: \"standard-basic\",\n      value: this.state.eventCapacity,\n      label: \"Event Capacity\",\n      onChange: event => this.handleInput(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, \"Event Destination(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '10px',\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MapContainer, {\n      curLat: 10,\n      curLng: 10,\n      locationChoosed: location => this.setState({\n        locationLat: location.lat,\n        locationLng: location.lng\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 37\n      }\n    }, \"Enter Adress Here:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"empty textarea\",\n      placeholder: \"Empty\",\n      value: this.state.locationText,\n      onChange: text => {\n        this.setState({\n          locationText: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, \"Time(required)\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(DateSection, {\n      curStartDate: new Date(),\n      curEndDate: new Date(),\n      data: \"a\",\n      dateChoosed: date => {\n        this.setState({\n          startDate: date.substring(0, date.indexOf(\"G\")),\n          endDate: date.substring(53)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, \"Optinal Choices\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, \"This part is for optional questions for the outside user, choose the ones you want to ask\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        width: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100px',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.askGender,\n        onChange: change => this.handleChange(change),\n        name: \"askGender\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 45\n        }\n      }),\n      label: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.askAge,\n        onChange: change => this.handleChange(change),\n        name: \"askAge\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 45\n        }\n      }),\n      label: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(OtherQuestions, {\n      type: \"other\",\n      addQuestions: (questions, type) => this.handleQuestions(questions, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginRight: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: event => this.handleCreate(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, \"Create Event\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.open,\n      autoHideDuration: 3000,\n      onClose: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => this.handleClose(),\n      severity: this.state.alertType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, this.state.msg))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: () => {\n        setOpen(false);\n      },\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, \"Enter the questions you want to ask in your survey.\"), /*#__PURE__*/React.createElement(OtherQuestions, {\n      type: \"survey\",\n      addQuestions: (questions, type) => this.handleQuestions(questions, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        setOpen(false);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleSubmit(),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default AddEvent;","map":{"version":3,"sources":["C:/Users/Cagri Eren/Desktop/tubitak-project/event-manager-react/src/components/AddEvent/AddEvent.js"],"names":["React","Component","TextField","AddEventHeader","SwitchSection","history","DateSection","axios","Button","MapContainer","TextareaAutosize","Data","Snackbar","MuiAlert","FormControlLabel","Switch","OtherQuestions","uri","Alert","props","getMonthNumberFromName","monthName","fixDateForJSON","date","year","substring","month","day","fixTimeForJSON","hour","minute","AddEvent","constructor","state","eventName","eventCapacity","open","msg","alertType","locationLat","locationLng","locationText","startDate","endDate","switchGender","switchAge","questions","surveyQuestions","handleClose","setState","handleCreate","event","postData","askAge","askGender","post","then","response","console","log","type","data","messageType","message","callbackAlert","push","handleInput","name","target","value","handleQuestions","setTimeout","arr","handleChange","change","checked","render","height","backgroundColor","width","marginTop","marginLeft","display","justifyContent","alignItems","marginBottom","location","lat","lng","text","Date","indexOf","flexDirection","flexWrap","float","marginRight","setOpen","handleSubmit"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, {Component} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddEventHeader from './AddEventHeader';\r\nimport SwitchSection from '../SwitchSection';\r\nimport history from '../../history';\r\nimport DateSection from '../DateSection';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport MapContainer from '../../MapContainer';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { Data } from '@react-google-maps/api';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport OtherQuestions from '../OtherQuestions';\r\n\r\n/**\r\n * Errors: \r\n * 1-You need to click 2 times to set the location\r\n * 2-End date not gettin correctly (getting realy close to fix)\r\n */\r\n\r\nconst uri = \"http://localhost:8080/events\"\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nfunction getMonthNumberFromName(monthName){\r\n    switch(monthName){\r\n        case 'Jan':\r\n            return '01';\r\n        case 'Feb':\r\n            return '02';\r\n        case 'Mar':\r\n            return '03';\r\n        case 'Apr':\r\n            return '04';\r\n        case 'May':\r\n            return '05';\r\n        case 'Jun':\r\n            return '06';\r\n        case 'Jul':\r\n            return '07';\r\n        case 'Aug':\r\n            return '08';\r\n        case 'Sep':\r\n            return '09';\r\n        case 'Oct':\r\n            return '10';\r\n        case 'Nov':\r\n            return '11';\r\n        case 'Dec':\r\n            return '12';\r\n        default:\r\n            return \"error\";\r\n    }\r\n}\r\n\r\nfunction fixDateForJSON(date){\r\n    let year = date.substring(11,15);\r\n    let month = getMonthNumberFromName(date.substring(4,7));\r\n    let day = date.substring(8,10);\r\n    \r\n    return year+'-'+month+'-'+day;\r\n}\r\nfunction fixTimeForJSON(date){\r\n    let hour = date.substring(16,18);\r\n    let minute = date.substring(19,21);\r\n    return hour+':'+minute;\r\n}\r\nclass AddEvent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            eventName: \"\",\r\n            eventCapacity: 0,\r\n\r\n            open: false,\r\n            msg: \"\",\r\n            alertType: \"\",\r\n\r\n            locationLat: null,\r\n            locationLng: null,\r\n            locationText: \"\",\r\n\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n\r\n            switchGender: false,\r\n            switchAge: false,\r\n            questions:[{}],\r\n            surveyQuestions:[{}]\r\n            \r\n        }\r\n    }\r\n      \r\n    handleClose(){\r\n        this.setState({open:false,msg:'',alertType:''});\r\n    }\r\n    handleCreate(event){\r\n        if((this.state.eventName === \"\")){\r\n            this.setState({ alertType: \"error\", msg:\"Event name can not be empty\",open:!this.state.open});\r\n        }\r\n        else if( (this.state.eventCapacity === 0)){\r\n            this.setState({ alertType: \"error\", msg:\"Event capacity can not be empty\",open:!this.state.open});\r\n        }\r\n        else if( this.state.locationLat == null || this.state.locationLng == null ){\r\n            this.setState({ alertType: \"error\", msg:\"You must select a location for the event\",open:!this.state.open});\r\n        }\r\n    \r\n        else{\r\n            const postData ={\r\n                'name':this.state.eventName,\r\n                'max':this.state.eventCapacity,\r\n                'startDate':fixDateForJSON(this.state.startDate),\r\n                'startTime':fixTimeForJSON(this.state.startDate),\r\n                'endDate':fixDateForJSON(this.state.endDate),\r\n                'endTime':fixTimeForJSON(this.state.endDate),\r\n                'lat':this.state.locationLat,\r\n                'lng':this.state.locationLng,\r\n                'askAge':this.state.askAge,\r\n                'askGender':this.state.askGender,\r\n                'questions':this.state.questions,\r\n                'surveyQuestions':this.state.surveyQuestions\r\n            };\r\n            axios.post( uri, postData ).then( response => {\r\n                console.log(response);\r\n                let type;\r\n                if( response.data.messageType === 'ERROR' ){\r\n                    type = \"error\";\r\n                }\r\n                else{\r\n                    type = \"success\";\r\n                }\r\n                if( type !== \"success\"  ){\r\n                    this.setState({\r\n                        open:true,\r\n                        msg:response.data.message,\r\n                        alertType:'error'\r\n                    })\r\n                }\r\n                else{\r\n                    this.props.callbackAlert(response.data.message,type);\r\n                }\r\n                if(response.data.messageType === 'SUCCESS'){\r\n                    history.push(\"/events\");\r\n                }\r\n            });\r\n            //Alert the user and pass the data to backend\r\n            //this.setState({ alertType: \"succes\", msg:\"Event Created\",open:!this.state.open});\r\n            console.log(postData);\r\n            console.log(this.state.endDate);\r\n            console.log(this.state.startDate);\r\n       }\r\n    }\r\n    handleInput(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    handleQuestions( questions , type){\r\n        if( type === 'other'){\r\n            setTimeout(()=>{\r\n            let arr = [...questions];\r\n            this.setState({\r\n                questions:arr\r\n            })\r\n            console.log(this.state.questions);\r\n            }\r\n            ,\r\n            100);\r\n        }\r\n        else{\r\n            setTimeout(()=>{\r\n                let arr = [...questions];\r\n                this.setState({\r\n                    surveyQuestions:arr\r\n                })\r\n                console.log(this.state.questions);\r\n                }\r\n                ,100);\r\n        }\r\n    }\r\n    handleChange( change ){\r\n        const name = change.target.name;\r\n        const value = change.target.checked;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        console.log(value);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <AddEventHeader></AddEventHeader>\r\n                <div className = \"mainContainer\">\r\n                    <form>\r\n                        <div>\r\n                            <h2>Event Name(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{height:'100px', marginTop:'1em',marginLeft:'1em'}}>\r\n                                <TextField name= \"eventName\" id=\"standard-basic\" value={this.state.eventName} label=\"Event Name\" onChange={(event)=>this.handleInput(event)}/>\r\n                            </div>\r\n                            <h2>Event Capacity(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{height:'100px', marginTop:'1em',marginLeft:'1em'}}>\r\n                                <TextField type=\"number\" name= \"eventCapacity\" id=\"standard-basic\" value={this.state.eventCapacity} label=\"Event Capacity\" onChange={(event)=>this.handleInput(event)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Event Destination(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{display:'flex',justifyContent:'space-evenly',alignItems:'center'}}>\r\n                                <div style={{marginTop:'10px',marginBottom:'10px'}}>\r\n                                    <MapContainer curLat={10} curLng={10} locationChoosed={location => this.setState({locationLat:location.lat,locationLng:location.lng})}></MapContainer>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Enter Adress Here:</p>\r\n                                    <div>\r\n                                        <TextareaAutosize aria-label=\"empty textarea\" placeholder=\"Empty\" value={this.state.locationText} \r\n                                        onChange={(text)=>{this.setState({locationText:text})}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Time(required)</h2>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <DateSection curStartDate= {new Date()} curEndDate={new Date()} data ='a' dateChoosed={date => { \r\n                                this.setState({startDate: date.substring(0,date.indexOf(\"G\")), \r\n                                endDate: date.substring(53)})}}>\r\n                            </DateSection>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Optinal Choices</h2>\r\n                            <p>This part is for optional questions for the outside user, choose the ones you want to ask</p>\r\n                            <div style={{height: '1px',backgroundColor: 'black',width:'75%'}}></div>\r\n                            <div style={{height:'100px', display:'flex',flexDirection:'row', flexWrap:'wrap',justifyContent:'space-evenly'}}>\r\n                                <div>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={this.state.askGender}\r\n                                                onChange={(change)=>this.handleChange(change)}\r\n                                                name=\"askGender\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Gender\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                            checked={this.state.askAge}\r\n                                                onChange={(change)=>this.handleChange(change)}\r\n                                                name=\"askAge\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Age\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <OtherQuestions type=\"other\" addQuestions={(questions,type)=>this.handleQuestions(questions,type)}></OtherQuestions>\r\n                        </div>\r\n                        <div style={{float:'right',marginRight:'100px'}}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={(event) => this.handleCreate(event)}>\r\n                                Create Event\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                <Snackbar open={this.state.open} autoHideDuration={3000} onClose={()=>this.handleClose()}>\r\n                    <Alert onClose={()=>this.handleClose()} severity={this.state.alertType}>\r\n                        {this.state.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n                </div>\r\n                <div>\r\n                    <Dialog open={open} onClose={()=>{setOpen(false)}} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Enter the questions you want to ask in your survey.\r\n                            </DialogContentText>\r\n                            <OtherQuestions type=\"survey\" addQuestions={(questions,type)=>this.handleQuestions(questions,type)}></OtherQuestions>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={()=>{setOpen(false)}} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={()=>handleSubmit()} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddEvent;"]},"metadata":{},"sourceType":"module"}